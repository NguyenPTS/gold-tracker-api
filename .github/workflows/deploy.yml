name: Backend Deployment

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  WORKSPACE: /home/backend
  PROJECT_NAME: gold-tracker-api

jobs:
  deploy:
    name: Deploy Backend
    runs-on: self-hosted
    steps:
      - name: Debug path variables
        run: |
          echo "WORKSPACE=$WORKSPACE"
          echo "PROJECT_NAME=$PROJECT_NAME"
          echo "PWD=$(pwd)"
          
      - name: Copy env file
        run: |
          if [ -f /home/backend/.env.docker ]; then
            cp /home/backend/.env.docker $WORKSPACE/$PROJECT_NAME/.env.docker
          else
            echo "WARNING: /home/backend/.env.docker not found! Please upload your .env.docker to /home/backend before deploy."
          fi
          
      - name: Deploy
        run: |
          echo "Deploying backend API"
          cd $WORKSPACE/$PROJECT_NAME
          
          # Configure git credentials
          git config credential.helper '!f() { sleep 1; echo "username=${{ secrets.GH_USER }}"; echo "password=${{ secrets.GH_TOKEN }}"; }; f'
          
          # Fetch latest changes
          git fetch origin master
          
          # Check if local repository exists and has commits
          if [ -d .git ] && git rev-parse HEAD > /dev/null 2>&1; then
            # Try normal pull first
            git pull origin master || {
              echo "Normal pull failed, trying alternative approaches"
              
              # Save local changes if any
              git stash || true
              
              # Reset to match remote (this will discard local changes)
              git reset --hard origin/master || {
                # If reset fails, try clone from scratch
                cd $WORKSPACE
                rm -rf $PROJECT_NAME
                git clone https://github.com/NguyenPTS/gold-tracker-api.git $PROJECT_NAME
                cd $PROJECT_NAME
              }
            }
          else
            # Fresh clone if no git repo
            cd $WORKSPACE
            rm -rf $PROJECT_NAME
            git clone https://github.com/NguyenPTS/gold-tracker-api.git $PROJECT_NAME
            cd $PROJECT_NAME
          fi
          
          # Check if Docker containers exist and remove them
          CONTAINER_EXISTS=$(docker-compose ps -q giavang-api)
          if [ -n "$CONTAINER_EXISTS" ]; then
            echo "Stopping existing containers"
            docker-compose down
          fi
          
          # Check if Docker image exists and remove it
          IMAGE_EXISTS=$(docker images -q gold-tracker-api)
          if [ -n "$IMAGE_EXISTS" ]; then
            echo "Removing existing image"
            docker image rm gold-tracker-api
          fi
          
          # Build and start containers
          echo "Building and starting containers"
          docker-compose build --no-cache
          docker-compose up -d
          
          echo "Deployment completed successfully" 